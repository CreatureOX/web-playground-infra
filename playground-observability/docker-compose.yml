version: '3'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${SKYWALKING_ES_VERSION}
    container_name: elasticsearch
    ports:
      - ${SKYWALKING_ES_PORT}:9200
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
      
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - ${PROMETHEUS_PORT}:9090
    restart: unless-stopped
    volumes:
      - ${PROMETHEUS_DIR}/config:/etc/prometheus
      - ${PROMETHEUS_DIR}/prom_data:/prometheus

  oap:
    image: apache/skywalking-oap-server:latest
    container_name: oap
    links:
      - elasticsearch
    ports:
      - ${SKYWALKING_OAP_GRPC_PORT}:11800
      - ${SKYWALKING_OAP_HTTP_PORT}:12800
      - ${SKYWALKING_OAP_LOKI_PORT}:3100
    environment:
      SW_STORAGE: elasticsearch
      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200
      SW_HEALTH_CHECKER: default
      SW_TELEMETRY: prometheus
      JAVA_OPTS: "-Xms2048m -Xmx2048m"
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "/skywalking/bin/swctl ch" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - ${GRAFANA_PORT}:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_INSTALL_PLUGINS=https://dist.apache.org/repos/dist/dev/skywalking/grafana-plugins/0.1.0/apache-skywalking-datasource-0.1.0.zip;apache-skywalking-datasource
    volumes:
      - ${GRAFANA_DIR}/provisioning:/etc/grafana/provisioning
      - ${GRAFANA_DIR}/dashboards:/var/lib/grafana/dashboards
    depends_on:
      oap:
        condition: service_healthy
